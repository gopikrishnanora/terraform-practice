name: Terraform CI

on:
  workflow_dispatch:
  
  #pull_request:
  #  paths:
  #    - '**/*.tf'
  #  types: [opened, synchronize]
  #push:
  #  branches: [main]
  
env:
  TF_VERSION: "1.5.0"
  
jobs:
  Detect_Changes:
    name: Detect Terraform Changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.resource }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: test
        shell: bash
        run: |
          #git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.tf'
          echo "Done!"
          
      - name: Get changed directories
        id: set-matrix
        run: |
          echo "Finding changed .tf files..."
          #changed_dirs=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
          #  | grep '\.tf$' \
          #  | awk -F/ '{print $1}' \
          #  | sort -u \
          #  | jq -R . \
          #  | jq -s '{folder: .}')
          #echo "Changed directories matrix: $changed_dirs"
          #echo "matrix=$changed_dirs" >> $GITHUB_OUTPUT
          echo "resource=['01-local-random-password']" >> $GITHUB_OUTPUT
          
  Plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: Detect_Changes
    strategy:
      matrix:
        folder: ${{ fromJson(needs.Detect_Changes.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ matrix.folder }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ matrix.folder }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ matrix.folder }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ matrix.folder }}
        run: terraform plan -out=tfplan

      - name: Upload Plan (PR context)
        #if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: plan-${{ matrix.folder }}
          path: ${{ matrix.folder }}/tfplan
          
  Apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: ["Detect_Changes", "Plan"]
    #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    strategy:
      matrix:
        folder: ${{ fromJson(needs.Detect_Changes.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ matrix.folder }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: Terraform Init, Plan & Apply
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Terraform State
        run: |
          ls -l
          terraform state list
